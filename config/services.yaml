# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Domain/Entity/'
            - '../src/Kernel.php'

    App\Infrastructure\Service\Registry\RoutingStepClassRegistry:
        arguments:
            $classesByAlias:
                redirect: App\Domain\Entity\Redirect
                condition: App\Domain\Entity\Condition

    App\Infrastructure\Service\Registry\RoutingStepSchemeClassRegistry:
        arguments:
            $classesByAlias:
                redirect.redirect: 'App\Application\RoutingStepScheme\Redirect\RedirectScheme'
                condition.datetime_range: 'App\Application\RoutingStepScheme\Condition\DateTimeRangeConditionScheme'


    app.auto_mapper.with_validation:
        class: App\Infrastructure\Mapper\ValidatingAutoMapperDecorator
        arguments:
            $autoMapper: '@App\Infrastructure\Mapper\NormalizerBasedAutoMapper'

    App\UI\Http\Controller\Api\RouteApiController:
        arguments:
            $autoMapper: '@app.auto_mapper.with_validation'

    App\UI\Http\Controller\Redirection\RedirectController:
        arguments:
            $autoMapper: '@app.auto_mapper.with_validation'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
